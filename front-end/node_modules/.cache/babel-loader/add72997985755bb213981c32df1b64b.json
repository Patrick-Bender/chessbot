{"ast":null,"code":"var _jsxFileName = \"/home/patrick/projects/chessbot/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport r from \"./img/r.svg\";\nimport n from \"./img/n.svg\";\nimport b from \"./img/b.svg\";\nimport q from \"./img/q.svg\";\nimport k from \"./img/k.svg\";\nimport p from \"./img/p.svg\";\nimport R from \"./img/R.svg\";\nimport N from \"./img/N.svg\";\nimport B from \"./img/B.svg\";\nimport Q from \"./img/Q.svg\";\nimport K from \"./img/K.svg\";\nimport P from \"./img/P.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  var classes = \"square\";\n  (Math.floor(props.id / 8) + props.id % 8) % 2 != 0 ? classes += \" black\" : classes += \" white\";\n  props.isHighlighted ? classes += \" highlighted\" : classes += \"\";\n  let imgsrc;\n  let pieceMap = new Map();\n  pieceMap.set('r', r);\n  pieceMap.set('n', n);\n  pieceMap.set('b', b);\n  pieceMap.set('q', q);\n  pieceMap.set('k', k);\n  pieceMap.set('p', p);\n  pieceMap.set('R', R);\n  pieceMap.set('N', N);\n  pieceMap.set('B', B);\n  pieceMap.set('Q', Q);\n  pieceMap.set('K', K);\n  pieceMap.set('P', P);\n  props.piece ? imgsrc = pieceMap[props.piece] : imgsrc = ''; //imgsrc = require(\"./logo.svg\");\n\n  console.log(imgsrc);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    onClick: props.onClick,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"piece\",\n      src: imgsrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Square;\n\nfunction getBoardFromFEN(FEN) {\n  var map = [];\n\n  for (var i = 0; i < 64; i++) {\n    map.push('');\n  }\n\n  var id = 56;\n  const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n  var i = 0;\n\n  while (FEN.charAt(i) != ' ') {\n    var ch = FEN.charAt(i);\n\n    if (pieces.has(ch)) {\n      map[id] = ch;\n      id += 1;\n    } else if (ch == '/'.charAt(0)) {\n      id -= 16;\n    } else if (ch >= '0'.charAt(0) && ch <= '9'.charAt(0)) {\n      id += Number(ch);\n    }\n\n    i++;\n  }\n\n  return map;\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], new Set([a, b, c])];\n    }\n  }\n\n  if (squares.every(s => s != null)) {\n    return ['draw', new Set()];\n  } else {\n    return [null, new Set()];\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardSize: 8\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      isHighlighted: this.props.highlighted.has(i),\n      id: i,\n      piece: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this);\n  }\n\n  renderRow(rowNumber) {\n    const colNumbers = Array.from(Array(this.state.boardSize).keys());\n    const squares = colNumbers.map(colNumber => this.renderSquare(rowNumber * this.state.boardSize + colNumber));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }, this);\n  }\n\n  render() {\n    const numbers = Array.from(Array(this.state.boardSize).keys());\n    const rows = numbers.map(number => this.renderRow(number));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n      }],\n      FEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n      whiteIsNext: true,\n      stepNumber: 0,\n      displayMovesDescending: true\n    };\n    console.log(this.state.history);\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares)[0] || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      whiteIsNext: !this.state.whiteIsNext,\n      stepNumber: history.length\n    });\n    console.log(this.state);\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      whiteIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const [winner, winningSquares] = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n\n      if (move == this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: move,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 7\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }, this);\n      }\n    });\n    let status;\n\n    if (winner == \"draw\") {\n      status = \"Draw\";\n    } else if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = (this.state.whiteIsNext ? 'White' : 'Black') + \"'s turn\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          highlighted: winningSquares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.state.displayMovesDescending = !this.state.displayMovesDescending,\n          children: \"Sort moves ascending or descending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: this.state.displayMovesDescending ? moves : moves.reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 4\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/patrick/projects/chessbot/src/App.js"],"names":["React","Square","props","classes","Math","floor","id","isHighlighted","imgsrc","pieceMap","Map","set","r","n","b","q","k","p","R","N","B","Q","K","P","piece","console","log","onClick","getBoardFromFEN","FEN","map","i","push","pieces","Set","charAt","ch","has","Number","calculateWinner","squares","lines","length","a","c","every","s","Board","Component","constructor","state","boardSize","renderSquare","highlighted","renderRow","rowNumber","colNumbers","Array","from","keys","colNumber","render","numbers","rows","number","Game","history","whiteIsNext","stepNumber","displayMovesDescending","handleClick","slice","current","xIsNext","setState","concat","jumpTo","step","winner","winningSquares","moves","move","desc","status","reverse","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport r from \"./img/r.svg\";\nimport n from \"./img/n.svg\";\nimport b from \"./img/b.svg\";\nimport q from \"./img/q.svg\";\nimport k from \"./img/k.svg\";\nimport p from \"./img/p.svg\";\nimport R from \"./img/R.svg\";\nimport N from \"./img/N.svg\";\nimport B from \"./img/B.svg\";\nimport Q from \"./img/Q.svg\";\nimport K from \"./img/K.svg\";\nimport P from \"./img/P.svg\";\n\nfunction Square(props){\n\tvar classes = \"square\";\n\t((Math.floor(props.id/8) + (props.id % 8)) % 2 != 0) ? classes += \" black\" : classes += \" white\"; \n\t(props.isHighlighted) ? classes += \" highlighted\" : classes += \"\";\n\tlet imgsrc;\n\tlet pieceMap = new Map()\n\tpieceMap.set('r', r);\n\tpieceMap.set('n', n);\n\tpieceMap.set('b', b);\n\tpieceMap.set('q', q);\n\tpieceMap.set('k', k);\n\tpieceMap.set('p', p);\n\tpieceMap.set('R', R);\n\tpieceMap.set('N', N);\n\tpieceMap.set('B', B);\n\tpieceMap.set('Q', Q);\n\tpieceMap.set('K', K);\n\tpieceMap.set('P', P);\n\t\n\n\t(props.piece) ? imgsrc = pieceMap[props.piece] : imgsrc = '';\n\t//imgsrc = require(\"./logo.svg\");\n\tconsole.log(imgsrc)\n\treturn (\n\t\t<button className={classes} onClick={props.onClick}>\n\t\t\t<img class=\"piece\" src={imgsrc}></img>\n\t\t</button>\n\t);\n}\nfunction getBoardFromFEN(FEN){\n        var map = [];\n        for (var i = 0; i<64; i++){\n                map.push('');\n        }\n        var id = 56;\n        const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n        var i = 0;\n        while (FEN.charAt(i) != ' '){\n                var ch = FEN.charAt(i)\n                if (pieces.has(ch)){\n                        map[id] = ch;\n                        id += 1\n                }else if(ch == '/'.charAt(0)){\n                        id -= 16;\n                }else if(ch >= '0'.charAt(0) && ch <= '9'.charAt(0)){\n                        id += Number(ch);\n                }\n                i++;\n        }\n        return map;\n}\nfunction calculateWinner(squares){\n\tconst lines = [\n\t\t[0,1,2],\n\t\t[3,4,5],\n\t\t[6,7,8],\n\t\t[0,3,6],\n\t\t[1,4,7],\n\t\t[2,5,8],\n\t\t[0,4,8],\n\t\t[2,4,6],\n\t];\n\tfor (let i = 0; i < lines.length; i++){\n\t\tconst [a,b,c] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n\t\t\treturn [squares[a], new Set([a,b,c])];\n\t\t}\n\t}\n\tif (squares.every((s) => s != null)) {\n\t\treturn ['draw', new Set()];\n\t}\n\telse {\n\t\treturn [null, new Set()];\n\t}\n}\nclass Board extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tboardSize: 8,\n\t\t};\n\t}\n\trenderSquare(i) {\n\t\treturn (<Square \n\t\t\tisHighlighted={this.props.highlighted.has(i)}\n\t\t\tid={i}\n\t\t\tpiece={this.props.squares[i]}\n\t\t\tonClick={() => this.props.onClick(i)}\n\t\t/>);\n\t}\n\trenderRow(rowNumber){\n\t\tconst colNumbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst squares = colNumbers.map((colNumber) =>\n\t\t\tthis.renderSquare(rowNumber*this.state.boardSize + colNumber)\n\t\t);\n\n\n\t\treturn(<div className=\"board-row\">{squares}</div>);\n\n\t}\n\trender(){\n\t\tconst numbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst rows = numbers.map((number) =>\n\t\t\tthis.renderRow(number)\n\t\t);\n\t\treturn(\n\t\t\t<div>{rows}</div>\n\t\t)\t\n\t}\n\n}\n\nclass Game extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tsquares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n\t\t\t}],\n\t\t\tFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n\t\t\twhiteIsNext: true,\n\t\t\tstepNumber: 0,\n\t\t\tdisplayMovesDescending: true, \n\t\t};\n\t\tconsole.log(this.state.history);\n\t}\n\thandleClick(i){\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber+1);\n\t\tconst current = history[history.length-1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares)[0] || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X': 'O';\n\t\tthis.setState({\n\t\t\thistory: history.concat([{\n\t\t\t\tsquares: squares,\n\t\t\t}]),\n\t\t\twhiteIsNext: !this.state.whiteIsNext,\n\t\t\tstepNumber: history.length,\n\t\t});\n\t\tconsole.log(this.state);\n\t}\n\tjumpTo(step){\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\twhiteIsNext: (step % 2) === 0,\n\t\t});\n\t}\n\trender(){\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst [winner, winningSquares] = calculateWinner(current.squares);\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ?\n\t\t\t\t'Go to move #' + move:\n\t\t\t\t'Go to game start';\n\t\t\tif (move == this.state.stepNumber){\n\t\t\t\treturn (\n\t\t\t\t\t<li ref = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}else{\n\t\t\t\treturn(\n\t\t\t\t\t<li key = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t\t\t\t\t</li>\n\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tlet status;\n\t\tif (winner == \"draw\"){\n\t\t\tstatus = \"Draw\";\n\t\t}\n\t\telse if (winner){\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t}\n\t\telse {\n\t\t\tstatus = (this.state.whiteIsNext ? 'White': 'Black') + \"'s turn\";\n\t\t}\n\n\t\treturn(\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className = \"game-board\">\n\t\t\t\t<Board \n\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\thighlighted={winningSquares}\n\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<button onClick={() => this.state.displayMovesDescending = !this.state.displayMovesDescending}>Sort moves ascending or descending</button>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{this.state.displayMovesDescending ? moves : moves.reverse()}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction App() {\n  return (\n  \t<Game />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}