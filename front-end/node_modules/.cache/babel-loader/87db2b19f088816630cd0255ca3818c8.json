{"ast":null,"code":"var _jsxFileName = \"/home/patrick/projects/chessbot/front-end/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction legalMovesCheckSide(currentSide, squareSide) {\n  let add;\n  let stop;\n\n  if (squareSide === 'empty') {\n    add = true;\n    stop = false;\n  } else if (squareSide === currentSide) {\n    add = false;\n    stop = true;\n  } else {\n    add = true;\n    stop = true;\n  }\n\n  return [add, stop];\n}\n\nfunction getAllLegalMoves(FEN) {\n  return fetch('https://localhost:3001', {\n    method: \"GET\",\n    headers: new Headers({\n      \"Access-Control-Allow-Origin\": \"*\"\n    }),\n    body: \"FEN=\" + FEN\n  }).catch(err => {\n    if (typeof err === 'string') err = new Error(err);\n    console.error(err);\n  });\n}\n\nfunction getMove(FEN) {\n  return fetch(\"localhost:3001/move-request?FEN=\" + FEN);\n}\n\nfunction getNumSquaresToEdge() {\n  var numSquaresToEdge = new Array(64);\n\n  for (var file = 0; file < 8; file++) {\n    for (var rank = 0; rank < 8; rank++) {\n      var numNorth = rank;\n      var numSouth = 7 - rank;\n      var numWest = file;\n      var numEast = 7 - file;\n      var squareIndex = rank * 8 + file;\n      numSquaresToEdge[squareIndex] = new Map();\n      numSquaresToEdge[squareIndex].set(-8, numNorth);\n      numSquaresToEdge[squareIndex].set(8, numSouth);\n      numSquaresToEdge[squareIndex].set(-1, numWest);\n      numSquaresToEdge[squareIndex].set(1, numEast);\n      numSquaresToEdge[squareIndex].set(-9, Math.min(numNorth, numWest));\n      numSquaresToEdge[squareIndex].set(-7, Math.min(numNorth, numEast));\n      numSquaresToEdge[squareIndex].set(9, Math.min(numSouth, numEast));\n      numSquaresToEdge[squareIndex].set(7, Math.min(numSouth, numWest));\n    }\n  }\n\n  return numSquaresToEdge;\n}\n\nfunction Square(props) {\n  var classes = \"square\";\n  (Math.floor(props.id / 8) + props.id % 8) % 2 !== 0 ? classes += \" black\" : classes += \" white\";\n  props.isHighlighted ? classes += \" highlighted\" : classes += \"\";\n  let imgMap = new Map();\n  imgMap.set('r', r_b);\n  imgMap.set('n', n_b);\n  imgMap.set('b', b_b);\n  imgMap.set('q', q_b);\n  imgMap.set('k', k_b);\n  imgMap.set('p', p_b);\n  imgMap.set('R', r_w);\n  imgMap.set('N', n_w);\n  imgMap.set('B', b_w);\n  imgMap.set('Q', q_w);\n  imgMap.set('K', k_w);\n  imgMap.set('P', p_w);\n  let imgsrc;\n  props.piece !== '' ? imgsrc = imgMap.get(props.piece) : imgsrc = ''; //imgsrc = require(\"./logo.svg\");\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"piece\",\n      src: imgsrc,\n      alt: props.piece\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), props.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Square;\n\nfunction getSideFromPiece(piece) {\n  if (new Set(['r', 'n', 'b', 'q', 'k', 'p']).has(piece)) {\n    return 'black';\n  } else if (new Set(['R', 'N', 'B', 'Q', 'K', 'P']).has(piece)) {\n    return 'white';\n  } else {\n    return 'empty';\n  }\n}\n\nfunction getBoardFromFEN(FEN) {\n  var map = [];\n\n  for (var i = 0; i < 64; i++) {\n    map.push('');\n  }\n\n  var id = 0;\n  const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n  var i = 0;\n\n  while (FEN.charAt(i) !== ' ') {\n    var ch = FEN.charAt(i);\n\n    if (pieces.has(ch)) {\n      map[id] = ch;\n      id += 1;\n    } else if (ch >= '0'.charAt(0) && ch <= '9'.charAt(0)) {\n      id += Number(ch);\n    }\n\n    i++;\n  }\n\n  return map;\n}\n\nfunction calculateWinner(squares) {\n  return null; //can also return \"draw\"\n}\n\nfunction range(start, end) {\n  return Array(end - start + 1).fill().map((_, idx) => start + idx);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardSize: 8\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      isHighlighted: this.props.highlighted.has(i),\n      id: i,\n      piece: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }, this);\n  }\n\n  renderRow(rowNumber) {\n    const colNumbers = Array.from(Array(this.state.boardSize).keys());\n    const squares = colNumbers.map(colNumber => this.renderSquare(rowNumber * this.state.boardSize + colNumber));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 10\n    }, this);\n  }\n\n  render() {\n    const numbers = Array.from(Array(this.state.boardSize).keys());\n    const rows = numbers.map(number => this.renderRow(number));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        FEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n        squares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n        whiteShortCastle: true,\n        whiteLongCastle: true,\n        blackShortCastle: true,\n        blackLongCastle: true,\n        enPassantTarget: null\n      }],\n      whiteTurn: true,\n      stepNumber: 0,\n      selectedPiece: null,\n      selectedID: null,\n      numSquaresToEdge: getNumSquaresToEdge()\n    };\n  }\n\n  getSlidingMoves(id) {\n    const vertAndHor = [8, -8, 1, -1];\n    const diagonals = [7, 9, -7, -9];\n    const squares = this.state.history[this.state.stepNumber].squares;\n    const boundaries = new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 23, 31, 39, 47, 55, 63, 62, 61, 60, 59, 58, 57, 56, 48, 40, 32, 24, 16, 8]);\n    const friendlySide = getSideFromPiece(squares[id]);\n    var legalMoves = new Set();\n    var dirs = [];\n    var pointer = id;\n    let add;\n    let stop;\n\n    if (new Set(['b', 'B', 'q', 'Q']).has(squares[id])) {\n      diagonals.forEach(dir => dirs.push(dir));\n    }\n\n    if (new Set(['r', 'R', 'q', 'Q']).has(squares[id])) {\n      vertAndHor.forEach(dir => dirs.push(dir));\n    }\n\n    for (let dir of dirs) {\n      //var dir = dirs[d];\n      pointer = id + dir;\n\n      for (var i = 0; i < this.state.numSquaresToEdge[id].get(dir); i++) {\n        [add, stop] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]));\n        if (add) legalMoves.add(pointer);\n        if (stop) break;\n        pointer += dir;\n      }\n    }\n\n    legalMoves.delete(id);\n    return legalMoves;\n  }\n\n  getKnightMoves(id) {\n    const paths = [[-1, -2, -10], [-1, -2, 6], [-8, -16, -17], [-8, -16, -15], [1, 2, -6], [1, 2, 10], [8, 16, 17], [8, 16, 15]];\n    const squares = this.state.history[this.state.stepNumber].squares;\n    const boundaries = new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 23, 31, 39, 47, 55, 63, 62, 61, 60, 59, 58, 57, 56, 48, 40, 32, 24, 16, 8]);\n    const friendlySide = getSideFromPiece(squares[id]);\n    var legalMoves = new Set();\n\n    for (let path of paths) {\n      var [allowed] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[id + path[2]]));\n      var lastPointer = id;\n\n      for (let position of path) {\n        var pointer = id + position;\n        var lastRow = Math.floor(lastPointer / 8);\n        var lastFile = lastPointer % 8;\n        var currentRow = Math.floor(pointer / 8);\n        var currentFile = pointer % 8;\n        if (Math.abs(currentRow - lastRow) > 1) allowed = false;\n        if (Math.abs(currentFile - lastFile) > 1) allowed = false;\n        if (Math.abs(currentRow - lastRow) >= 1 && Math.abs(currentFile - lastFile) >= 1) allowed = false;\n        lastPointer = pointer;\n      }\n\n      if (allowed) legalMoves.add(id + path[2]);\n    }\n\n    return legalMoves;\n  }\n\n  getKingMoves(id) {\n    const positions = [8, -8, 1, -1, 7, 9, -7, -9];\n    const squares = this.state.history[this.state.stepNumber].squares;\n    const friendlySide = getSideFromPiece(squares[id]);\n    var legalMoves = new Set();\n    let allowed;\n    let pointer;\n\n    for (var d = 0; d < positions.length; d++) {\n      pointer = id + positions[d];\n      [allowed] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]));\n      if (this.state.numSquaresToEdge[id].get(positions[d]) == 0) allowed = false;\n      if (allowed) legalMoves.add(pointer);\n    }\n\n    return legalMoves;\n  }\n\n  getPawnMoves(id) {\n    const squares = this.state.history[this.state.stepNumber].squares;\n    const friendlySide = getSideFromPiece(squares[id]);\n    let direction;\n    friendlySide === 'white' ? direction = 1 : direction = -1;\n    var positions = new Array(); //add 1 move forward if not blocked\n\n    if (getSideFromPiece(squares[id - 8 * direction]) === 'empty') positions.push(-8); //add 2 move foward if on starting row\n\n    if (direction === 1 && new Set(range(48, 55)).has(id)) {\n      positions.push(-16);\n    } else if (direction === -1 && new Set(range(8, 15)).has(id)) {\n      positions.push(-16);\n    } //check if it can capture on left or right\n\n\n    const rightSide = getSideFromPiece(squares[id + -7 * direction]);\n    const leftSide = getSideFromPiece(squares[id + -9 * direction]);\n\n    if (rightSide !== friendlySide && rightSide !== 'empty') {\n      positions.push(-7);\n    }\n\n    if (leftSide !== friendlySide && leftSide !== 'empty') {\n      positions.push(-9);\n    }\n\n    const legalMoves = new Set(positions.map(position => id + position * direction));\n    return legalMoves;\n  }\n\n  getLegalMoves(id, piece) {\n    if (id !== null && piece !== '') {\n      if (new Set(['r', 'R', 'b', 'B', 'q', 'Q']).has(piece)) {\n        return this.getSlidingMoves(id);\n      } else if (new Set(['n', 'N']).has(piece)) {\n        return this.getKnightMoves(id);\n      } else if (new Set(['k', 'K']).has(piece)) {\n        return this.getKingMoves(id);\n      } else if (new Set(['p', 'P']).has(piece)) {\n        return this.getPawnMoves(id);\n      } else {\n        console.log(\"Something has gone wrong with get legal moves function\");\n        return new Set();\n      }\n    } else {\n      return new Set();\n    }\n  }\n\n  makeRandomMove(side) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    var squares = current.squares.slice();\n    var possibleMoves = new Array(64);\n\n    if (side == 'black') {\n      var possiblePieces = new Set(['r', 'b', 'q', 'n', 'k', 'p']);\n    } else if (side == 'white') {\n      var possiblePieces = new Set(['R', 'B', 'Q', 'N', 'K', 'P']);\n    } else {\n      throw new Error(\"Make random move was given a side that was not black or white\");\n    }\n\n    for (var i = 0; i < 64; i++) {\n      possibleMoves.append(this.getLegalMoves(i, squares[i]));\n    }\n\n    console.log(possibleMoves);\n  }\n\n  handleClick(i) {\n    console.log(getAllLegalMoves(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"));\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    var squares = current.squares.slice();\n    const selectedPiece = this.state.selectedPiece;\n    const selectedID = this.state.selectedID;\n\n    if (calculateWinner(squares)) {\n      return;\n    } //if already selected a piece\n    else if (selectedPiece && selectedID != null) {\n        //if clicking on selected piece deselect it\n        if (selectedID == i) {\n          this.setState({\n            selectedPiece: null,\n            selectedID: null\n          });\n        } //if i is a legal move\n        else if (this.getLegalMoves(selectedID, selectedPiece).has(i)) {\n            squares[selectedID] = \"\";\n            squares[i] = selectedPiece;\n            this.setState({\n              history: history.concat([{\n                squares: squares\n              }]),\n              whiteTurn: !this.state.whiteTurn,\n              stepNumber: history.length,\n              selectedPiece: null,\n              selectedID: null\n            });\n          }\n      } else if (this.getLegalMoves(i, squares[i]).size !== 0 && this.state.whiteTurn === (getSideFromPiece(squares[i]) === 'white')) {\n        this.setState({\n          selectedPiece: squares[i],\n          selectedID: i\n        });\n      }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      whiteTurn: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n\n      if (move === this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 7\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 7\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 6\n        }, this);\n      }\n    });\n    let status;\n\n    if (winner === \"draw\") {\n      status = \"Draw\";\n    } else if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = (this.state.whiteTurn ? 'White' : 'Black') + \"'s turn\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          highlighted: this.getLegalMoves(this.state.selectedID, this.state.selectedPiece),\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 4\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/patrick/projects/chessbot/front-end/src/App.js"],"names":["React","legalMovesCheckSide","currentSide","squareSide","add","stop","getAllLegalMoves","FEN","fetch","method","headers","Headers","body","catch","err","Error","console","error","getMove","getNumSquaresToEdge","numSquaresToEdge","Array","file","rank","numNorth","numSouth","numWest","numEast","squareIndex","Map","set","Math","min","Square","props","classes","floor","id","isHighlighted","imgMap","r_b","n_b","b_b","q_b","k_b","p_b","r_w","n_w","b_w","q_w","k_w","p_w","imgsrc","piece","get","onClick","getSideFromPiece","Set","has","getBoardFromFEN","map","i","push","pieces","charAt","ch","Number","calculateWinner","squares","range","start","end","fill","_","idx","Board","Component","constructor","state","boardSize","renderSquare","highlighted","renderRow","rowNumber","colNumbers","from","keys","colNumber","render","numbers","rows","number","Game","history","whiteShortCastle","whiteLongCastle","blackShortCastle","blackLongCastle","enPassantTarget","whiteTurn","stepNumber","selectedPiece","selectedID","getSlidingMoves","vertAndHor","diagonals","boundaries","friendlySide","legalMoves","dirs","pointer","forEach","dir","delete","getKnightMoves","paths","path","allowed","lastPointer","position","lastRow","lastFile","currentRow","currentFile","abs","getKingMoves","positions","d","length","getPawnMoves","direction","rightSide","leftSide","getLegalMoves","log","makeRandomMove","side","slice","current","possibleMoves","possiblePieces","append","handleClick","setState","concat","size","jumpTo","step","winner","moves","move","desc","status","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\n\nfunction legalMovesCheckSide(currentSide, squareSide){\n\tlet add;\n\tlet stop;\n\tif (squareSide === 'empty'){\n\t\tadd = true;\n\t\tstop = false;\n\t}else if(squareSide === currentSide){\n\t\tadd = false;\n\t\tstop = true;\n\t}else{\n\t\tadd = true;\n\t\tstop = true;\n\t}\n\treturn [add, stop]\n}\nfunction getAllLegalMoves(FEN){\n\treturn fetch('https://localhost:3001', {\n\t\tmethod: \"GET\",\n\t\theaders: new Headers({\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t}),\n\t\tbody: \"FEN=\" + FEN,\n\t}).catch((err) => {\n\t  if(typeof err === 'string') err = new Error(err)\n\t  console.error(err)\n\t})\n}\nfunction getMove(FEN){\n\treturn fetch(\"localhost:3001/move-request?FEN=\" + FEN)\n}\nfunction getNumSquaresToEdge(){\n\tvar numSquaresToEdge = new Array(64);\n\tfor (var file = 0; file < 8; file ++){\n\t\tfor (var rank = 0; rank < 8; rank ++){\n\t\t\tvar numNorth = rank;\n\t\t\tvar numSouth = 7-rank;\n\t\t\tvar numWest = file;\n\t\t\tvar numEast = 7-file;\n\t\t\tvar squareIndex = rank*8+file\n\t\t\tnumSquaresToEdge[squareIndex] = new Map();\n\t\t\tnumSquaresToEdge[squareIndex].set(-8, numNorth);\n\t\t\tnumSquaresToEdge[squareIndex].set(8, numSouth);\n\t\t\tnumSquaresToEdge[squareIndex].set(-1, numWest);\n\t\t\tnumSquaresToEdge[squareIndex].set(1, numEast);\n\t\t\tnumSquaresToEdge[squareIndex].set(-9, Math.min(numNorth, numWest));\n\t\t\tnumSquaresToEdge[squareIndex].set(-7, Math.min(numNorth, numEast));\n\t\t\tnumSquaresToEdge[squareIndex].set(9, Math.min(numSouth, numEast));\n\t\t\tnumSquaresToEdge[squareIndex].set(7, Math.min(numSouth, numWest));\n\t\t}\n\t}\n\treturn numSquaresToEdge\n}\nfunction Square(props){\n\tvar classes = \"square\";\n\t((Math.floor(props.id/8) + (props.id % 8)) % 2 !== 0) ? classes += \" black\" : classes += \" white\"; \n\t(props.isHighlighted) ? classes += \" highlighted\" : classes += \"\";\n\tlet imgMap = new Map();\n\timgMap.set('r', r_b);\n\timgMap.set('n', n_b);\n\timgMap.set('b', b_b);\n\timgMap.set('q', q_b);\n\timgMap.set('k', k_b);\n\timgMap.set('p', p_b);\n\timgMap.set('R', r_w);\n\timgMap.set('N', n_w);\n\timgMap.set('B', b_w);\n\timgMap.set('Q', q_w);\n\timgMap.set('K', k_w);\n\timgMap.set('P', p_w);\n\tlet imgsrc;\n\t(props.piece !== '') ? imgsrc = imgMap.get(props.piece) : imgsrc = '';\n\t//imgsrc = require(\"./logo.svg\");\n\treturn (\n\t\t<button className={classes} onClick={props.onClick}>\n\t\t\t<img className=\"piece\" src={imgsrc} alt={props.piece}></img>\n\t\t\t{props.id}\n\t\t</button>\n\t);\n}\nfunction getSideFromPiece(piece){\n\tif (new Set(['r', 'n', 'b', 'q', 'k', 'p']).has(piece)){\n\t\treturn 'black'\n\t}else if (new Set(['R', 'N', 'B', 'Q', 'K', 'P']).has(piece)){\n\t\treturn 'white'\n\t}else{\n\t\treturn 'empty'\n\t}\n}\nfunction getBoardFromFEN(FEN){\n        var map = [];\n        for (var i = 0; i<64; i++){\n                map.push('');\n        }\n        var id = 0;\n        const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n        var i = 0;\n        while (FEN.charAt(i) !== ' '){\n\t\tvar ch = FEN.charAt(i)\n                if (pieces.has(ch)){\n                        map[id] = ch;\n                        id += 1;\n                }else if(ch >= '0'.charAt(0) && ch <= '9'.charAt(0)){\n                        id += Number(ch);\n                }\n                i++;\n        }\n        return map;\n}\nfunction calculateWinner(squares){\n\treturn null;\n\t//can also return \"draw\"\n}\nfunction range(start, end) {\n  return Array(end - start + 1).fill().map((_, idx) => start + idx)\n}\nclass Board extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tboardSize: 8,\n\t\t};\n\t}\n\trenderSquare(i) {\n\t\treturn (<Square \n\t\t\tisHighlighted={this.props.highlighted.has(i)}\n\t\t\tid={i}\n\t\t\tpiece={this.props.squares[i]}\n\t\t\tonClick={() => this.props.onClick(i)}\n\t\t/>);\n\t}\n\trenderRow(rowNumber){\n\t\tconst colNumbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst squares = colNumbers.map((colNumber) =>\n\t\t\tthis.renderSquare(rowNumber*this.state.boardSize + colNumber)\n\t\t);\n\n\n\t\treturn(<div className=\"board-row\">{squares}</div>);\n\n\t}\n\trender(){\n\t\tconst numbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst rows = numbers.map((number) =>\n\t\t\tthis.renderRow(number)\n\t\t);\n\t\treturn(\n\t\t\t<div>{rows}</div>\n\t\t)\t\n\t}\n\n}\n\nclass Game extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n\t\t\t\tsquares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n\t\t\t\twhiteShortCastle: true,\n\t\t\t\twhiteLongCastle: true,\n\t\t\t\tblackShortCastle: true,\n\t\t\t\tblackLongCastle: true,\n\t\t\t\tenPassantTarget: null,\n\t\t\t}],\n\t\t\twhiteTurn: true,\n\t\t\tstepNumber: 0,\n\t\t\tselectedPiece: null,\n\t\t\tselectedID: null,\n\t\t\tnumSquaresToEdge: getNumSquaresToEdge(),\n\t\t};\n\t}\n\tgetSlidingMoves(id){\n\t\tconst vertAndHor = [8, -8, 1, -1];\n\t\tconst diagonals = [7,9,-7,-9];\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tconst boundaries = new Set([0,1,2,3,4,5,6,7,8,15,23,31,39,47,55,63,62,61,60,59,58,57,56,48,40,32,24,16,8])\n\t\tconst friendlySide = getSideFromPiece(squares[id]);\n\t\tvar legalMoves = new Set();\n\t\tvar dirs = [];\n\t\tvar pointer = id\n\t\tlet add;\n\t\tlet stop;\n\t\tif (new Set(['b', 'B', 'q', 'Q']).has(squares[id])){\n\t\t\tdiagonals.forEach(dir => dirs.push(dir))\n\t\t}\n\t\tif (new Set(['r', 'R', 'q', 'Q']).has(squares[id])){\n\t\t\tvertAndHor.forEach(dir => dirs.push(dir))\n\t\t}\n\t\tfor (let dir of dirs){\n\t\t\t//var dir = dirs[d];\n\t\t\tpointer = id+dir;\n\t\t\tfor (var i = 0; i < this.state.numSquaresToEdge[id].get(dir); i++){\n\t\t\t\t[add, stop] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]));\t\n\t\t\t\tif (add) legalMoves.add(pointer);\n\t\t\t\tif (stop) break;\n\t\t\t\tpointer += dir;\n\t\t\t}\n\t\t}\n\t\tlegalMoves.delete(id);\n\t\treturn legalMoves\n\t}\n\t\n\tgetKnightMoves(id){\n\t\tconst paths = [[-1,-2,-10], [-1,-2,6], [-8,-16,-17], [-8,-16,-15], [1,2,-6], [1,2,10], [8,16,17], [8,16,15]]\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tconst boundaries = new Set([0,1,2,3,4,5,6,7,8,15,23,31,39,47,55,63,62,61,60,59,58,57,56,48,40,32,24,16,8])\n\t\tconst friendlySide = getSideFromPiece(squares[id]);\n\t\tvar legalMoves = new Set();\n\t\tfor (let path of paths){\n\t\t\tvar [allowed,] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[id+path[2]]));\n\t\t\tvar lastPointer = id;\n\t\t\tfor (let position of path){\n\t\t\t\tvar pointer = id+position;\n\t\t\t\tvar lastRow = Math.floor(lastPointer/8);\n\t\t\t\tvar lastFile = lastPointer % 8;\n\t\t\t\tvar currentRow = Math.floor(pointer/8);\n\t\t\t\tvar currentFile = pointer % 8;\n\t\t\t\tif (Math.abs(currentRow-lastRow) > 1) allowed = false\n\t\t\t\tif (Math.abs(currentFile-lastFile) > 1) allowed = false\n\t\t\t\tif (Math.abs(currentRow-lastRow) >= 1 && Math.abs(currentFile-lastFile) >= 1) allowed = false\n\t\t\t\tlastPointer = pointer;\n\t\t\t}\n\t\t\tif (allowed) legalMoves.add(id+path[2]);\n\t\t}\n\t\treturn legalMoves\n\t}\n\tgetKingMoves(id){\n\t\tconst positions = [8, -8, 1, -1, 7, 9, -7, -9];\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tconst friendlySide = getSideFromPiece(squares[id]);\n\t\tvar legalMoves = new Set();\n\t\tlet allowed;\n\t\tlet pointer;\n\t\tfor (var d = 0; d < positions.length; d++){\n\t\t\tpointer = id+positions[d];\n\t\t\t[allowed, ] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]))\n\t\t\tif (this.state.numSquaresToEdge[id].get(positions[d]) == 0) allowed = false;\n\t\t\tif (allowed) legalMoves.add(pointer)\n\t\t}\n\t\treturn legalMoves\n\t}\n\tgetPawnMoves(id){\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tconst friendlySide = getSideFromPiece(squares[id]);\n\t\tlet direction;\n\t\t(friendlySide === 'white') ? direction = 1 : direction = -1;\n\t\tvar positions = new Array();\n\t\t//add 1 move forward if not blocked\n\t\tif (getSideFromPiece(squares[id-(8*direction)]) === 'empty') positions.push(-8)\n\t\t//add 2 move foward if on starting row\n\t\tif (direction === 1 && new Set(range(48, 55)).has(id)){\n\t\t\tpositions.push(-16);\n\t\t}else if (direction === -1 && new Set(range(8,15)).has(id)){\n\t\t\tpositions.push(-16);\n\t\t}\n\t\t//check if it can capture on left or right\n\t\tconst rightSide = getSideFromPiece(squares[id+(-7*direction)])\n\t\tconst leftSide = getSideFromPiece(squares[id+(-9*direction)])\n\t\tif (rightSide !== friendlySide && rightSide !== 'empty'){\n\t\t\tpositions.push(-7);\n\t\t}\n\t\tif (leftSide !== friendlySide && leftSide !== 'empty'){\n\t\t\tpositions.push(-9);\n\t\t}\n\t\tconst legalMoves = new Set(positions.map((position) => id+(position*direction)));\n\t\treturn legalMoves\n\t}\n\tgetLegalMoves(id, piece){\n\t\tif (id !== null && piece !== ''){\n\t\t\tif (new Set(['r', 'R', 'b', 'B', 'q', 'Q']).has(piece)){\n\t\t\t\treturn this.getSlidingMoves(id)\n\t\t\t}else if (new Set(['n', 'N']).has(piece)){\n\t\t\t\treturn this.getKnightMoves(id)\n\t\t\t}else if (new Set(['k', 'K']).has(piece)){\n\t\t\t\treturn this.getKingMoves(id)\n\t\t\t}else if (new Set(['p', 'P']).has(piece)){\n\t\t\t\treturn this.getPawnMoves(id)\n\t\t\t}else{\n\t\t\t\tconsole.log(\"Something has gone wrong with get legal moves function\")\n\t\t\t\treturn new Set();\n\t\t\t}\n\n\t\t}else{\n\t\t\treturn new Set()\n\t\t}\n\t}\n\tmakeRandomMove(side){\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber+1);\n\t\tconst current = history[history.length-1];\n\t\tvar squares = current.squares.slice();\n\t\tvar possibleMoves = new Array(64);\n\t\tif (side == 'black'){\n\t\t\tvar possiblePieces = new Set(['r', 'b', 'q', 'n', 'k', 'p'])\n\t\t}\n\t\telse if (side == 'white'){\n\t\t\tvar possiblePieces = new Set(['R', 'B', 'Q', 'N', 'K', 'P'])\n\t\t}\n\t\telse{\n\t\t\tthrow new Error(\"Make random move was given a side that was not black or white\");\n\t\t}\n\t\tfor (var i = 0; i < 64; i++){\n\t\t\tpossibleMoves.append(this.getLegalMoves(i, squares[i]));\n\t\t}\n\t\tconsole.log(possibleMoves);\n\t}\n\thandleClick(i){\n\t\tconsole.log(getAllLegalMoves(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"))\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber+1);\n\t\tconst current = history[history.length-1];\n\t\tvar squares = current.squares.slice();\n\t\tconst selectedPiece = this.state.selectedPiece;\n\t\tconst selectedID = this.state.selectedID;\n\t\tif (calculateWinner(squares)) {\n\t\t\treturn;\n\t\t}\n\t\t//if already selected a piece\n\t\telse if(selectedPiece && selectedID != null){\n\t\t\t//if clicking on selected piece deselect it\n\t\t\tif (selectedID == i){\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedPiece: null,\n\t\t\t\t\tselectedID: null,\n\t\t\t\t});\n\t\t\t}\n\t\t\t//if i is a legal move\n\t\t\telse if (this.getLegalMoves(selectedID, selectedPiece).has(i)){\n\t\t\t\tsquares[selectedID] = \"\";\n\t\t\t\tsquares[i] = selectedPiece;\n\t\t\t\tthis.setState({\n\t\t\t\t\thistory: history.concat([{\n\t\t\t\t\t\tsquares: squares,\n\t\t\t\t\t}]),\n\t\t\t\t\twhiteTurn: !this.state.whiteTurn,\n\t\t\t\t\tstepNumber: history.length,\n\t\t\t\t\tselectedPiece: null,\n\t\t\t\t\tselectedID: null,\n\t\t\t\t});\n\t\t\t\n\t\t\t}\n\n\t\t}\n\t\telse if (this.getLegalMoves(i, squares[i]).size !== 0 && (this.state.whiteTurn === (getSideFromPiece(squares[i]) === 'white'))){\n\t\t\tthis.setState({\n\t\t\t\tselectedPiece: squares[i],\n\t\t\t\tselectedID: i,\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\tjumpTo(step){\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\twhiteTurn: (step % 2) === 0,\n\t\t});\n\t}\n\trender(){\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ?\n\t\t\t\t'Go to move #' + move:\n\t\t\t\t'Go to game start';\n\t\t\tif (move === this.state.stepNumber){\n\t\t\t\treturn (\n\t\t\t\t\t<li key = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}else{\n\t\t\t\treturn(\n\t\t\t\t\t<li key = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t\t\t\t\t</li>\n\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tlet status;\n\t\tif (winner === \"draw\"){\n\t\t\tstatus = \"Draw\";\n\t\t}\n\t\telse if (winner){\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t}\n\t\telse {\n\t\t\tstatus = (this.state.whiteTurn ? 'White': 'Black') + \"'s turn\";\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className = \"game-board\">\n\t\t\t\t<Board \n\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\thighlighted={this.getLegalMoves(this.state.selectedID, this.state.selectedPiece)}\n\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{moves}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction App() {\n  return (\n  \t<Game />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}