{"ast":null,"code":"var _jsxFileName = \"/home/patrick/projects/chessbot/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction legalMovesCheckSide(currentSide, squareSide) {\n  let add;\n  let stop;\n\n  if (squareSide === 'empty') {\n    add = true;\n    stop = false;\n  } else if (squareSide === currentSide) {\n    add = false;\n    stop = true;\n  } else {\n    add = true;\n    stop = true;\n  }\n\n  return [add, stop];\n}\n\nfunction getNumSquaresToEdge() {\n  var numSquaresToEdge = new Array(64);\n\n  for (var file = 0; file < 8; file++) {\n    for (var rank = 0; rank < 8; rank++) {\n      var numNorth = rank;\n      var numSouth = 7 - rank;\n      var numWest = file;\n      var numEast = 7 - file;\n      var squareIndex = rank * 8 + file;\n      numSquaresToEdge[squareIndex] = new Map();\n      numSquaresToEdge[squareIndex].set(-8, numNorth);\n      numSquaresToEdge[squareIndex].set(8, numSouth);\n      numSquaresToEdge[squareIndex].set(-1, numWest);\n      numSquaresToEdge[squareIndex].set(1, numEast);\n      numSquaresToEdge[squareIndex].set(-9, Math.min(numNorth, numWest));\n      numSquaresToEdge[squareIndex].set(-7, Math.min(numNorth, numEast));\n      numSquaresToEdge[squareIndex].set(9, Math.min(numSouth, numEast));\n      numSquaresToEdge[squareIndex].set(7, Math.min(numSouth, numWest));\n    }\n  }\n\n  return numSquaresToEdge;\n}\n\nfunction Square(props) {\n  var classes = \"square\";\n  (Math.floor(props.id / 8) + props.id % 8) % 2 !== 0 ? classes += \" black\" : classes += \" white\";\n  props.isHighlighted ? classes += \" highlighted\" : classes += \"\";\n  let imgMap = new Map();\n  imgMap.set('r', r_b);\n  imgMap.set('n', n_b);\n  imgMap.set('b', b_b);\n  imgMap.set('q', q_b);\n  imgMap.set('k', k_b);\n  imgMap.set('p', p_b);\n  imgMap.set('R', r_w);\n  imgMap.set('N', n_w);\n  imgMap.set('B', b_w);\n  imgMap.set('Q', q_w);\n  imgMap.set('K', k_w);\n  imgMap.set('P', p_w);\n  let imgsrc;\n  props.piece !== '' ? imgsrc = imgMap.get(props.piece) : imgsrc = ''; //imgsrc = require(\"./logo.svg\");\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"piece\",\n      src: imgsrc,\n      alt: props.piece\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), props.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Square;\n\nfunction getSideFromPiece(piece) {\n  if (new Set(['r', 'n', 'b', 'q', 'k', 'p']).has(piece)) {\n    return 'black';\n  } else if (new Set(['R', 'N', 'B', 'Q', 'K', 'P']).has(piece)) {\n    return 'white';\n  } else {\n    return 'empty';\n  }\n}\n\nfunction getBoardFromFEN(FEN) {\n  var map = [];\n\n  for (var i = 0; i < 64; i++) {\n    map.push('');\n  }\n\n  var id = 0;\n  const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n  var i = 0;\n\n  while (FEN.charAt(i) !== ' ') {\n    var ch = FEN.charAt(i);\n    console.log(i, id, ch);\n\n    if (pieces.has(ch)) {\n      map[id] = ch;\n      id += 1;\n    } else if (ch >= '0'.charAt(0) && ch <= '9'.charAt(0)) {\n      id += Number(ch);\n    }\n\n    i++;\n  }\n\n  return map;\n}\n\nfunction calculateWinner(squares) {\n  return null; //can also return \"draw\"\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardSize: 8\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      isHighlighted: this.props.highlighted.has(i),\n      id: i,\n      piece: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this);\n  }\n\n  renderRow(rowNumber) {\n    const colNumbers = Array.from(Array(this.state.boardSize).keys());\n    const squares = colNumbers.map(colNumber => this.renderSquare(rowNumber * this.state.boardSize + colNumber));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 10\n    }, this);\n  }\n\n  render() {\n    const numbers = Array.from(Array(this.state.boardSize).keys());\n    const rows = numbers.map(number => this.renderRow(number));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        FEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n        squares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n        whiteShortCastle: true,\n        whiteLongCastle: true,\n        blackShortCastle: true,\n        blackLongCastle: true,\n        enPassantTarget: null\n      }],\n      whiteTurn: true,\n      stepNumber: 0,\n      selectedPiece: null,\n      selectedID: null,\n      numSquaresToEdge: getNumSquaresToEdge()\n    };\n  }\n\n  getSlidingMoves(id) {\n    const vertAndHor = [8, -8, 1, -1];\n    const diagonals = [7, 9, -7, -9];\n    const squares = this.state.history[this.state.stepNumber].squares;\n    const boundaries = new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 23, 31, 39, 47, 55, 63, 62, 61, 60, 59, 58, 57, 56, 48, 40, 32, 24, 16, 8]);\n    const friendlySide = getSideFromPiece(squares[id]);\n    var legalMoves = new Set();\n    var dirs = [];\n    var pointer = id;\n    let add;\n    let stop;\n\n    if (new Set(['b', 'B', 'q', 'Q']).has(squares[id])) {\n      diagonals.forEach(dir => dirs.push(dir));\n    }\n\n    if (new Set(['r', 'R', 'q', 'Q']).has(squares[id])) {\n      vertAndHor.forEach(dir => dirs.push(dir));\n    }\n\n    console.log(dirs);\n\n    for (var d = 0; d < dirs.length; d++) {\n      var dir = dirs[d];\n      pointer = id + dir;\n\n      for (var i = 0; i < this.state.numSquaresToEdge[id].get(dir); i++) {\n        [add, stop] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]));\n        if (add) legalMoves.add(pointer);\n        if (stop) break;\n        pointer += dir;\n      }\n    }\n\n    legalMoves.delete(id);\n    return legalMoves;\n  }\n\n  getKnightMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getKingMoves(id) {\n    const positions = [8, -8, 1, -1, 7, 9, -7, -9];\n    var legalMoves = new Set();\n\n    for (var d = 0; d < positions.length; d++) {\n      pointer = poisitions[d];\n      [allowed, _] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]));\n      if (allowed) legalMoves.add(pointer);\n    }\n\n    return legalMoves;\n  }\n\n  getPawnMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getLegalMoves(id, piece) {\n    console.log(\"ID and piece from get legal moves\", id, piece);\n\n    if (id !== null && piece !== '') {\n      if (new Set(['r', 'R', 'b', 'B', 'q', 'Q']).has(piece)) {\n        return this.getSlidingMoves(id);\n      } else if (new Set(['n', 'N']).has(piece)) {\n        return this.getKnightMoves(id);\n      } else if (new Set(['k', 'K']).has(piece)) {\n        return this.getKingMoves(id);\n      } else if (new Set(['p', 'P']).has(piece)) {\n        return this.getPawnMoves(id);\n      } else {\n        console.log(\"Something has gone wrong with get legal moves function\");\n        return new Set();\n      }\n    } else {\n      return new Set();\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    var squares = current.squares.slice();\n    const selectedPiece = this.state.selectedPiece;\n    const selectedID = this.state.selectedID;\n    console.log(\"selected piece and id for handle click\", selectedPiece, selectedID);\n\n    if (calculateWinner(squares)) {\n      return;\n    } else if (selectedPiece && selectedID != null) {\n      //if i is a legal move\n      if (this.getLegalMoves(selectedID, selectedPiece).has(i)) {\n        squares[selectedID] = \"\";\n        squares[i] = selectedPiece;\n        this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          whiteIsNext: !this.state.whiteTurn,\n          stepNumber: history.length,\n          selectedPiece: null,\n          selectedID: null\n        });\n      }\n    } else if (this.getLegalMoves(i, squares[i]).size !== 0) {\n      this.setState({\n        selectedPiece: squares[i],\n        selectedID: i\n      });\n    }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      whiteTurn: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n\n      if (move === this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 7\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 7\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 6\n        }, this);\n      }\n    });\n    let status;\n\n    if (winner === \"draw\") {\n      status = \"Draw\";\n    } else if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = (this.state.whiteTurn ? 'White' : 'Black') + \"'s turn\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          highlighted: this.getLegalMoves(this.state.selectedID, this.state.selectedPiece),\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 4\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/patrick/projects/chessbot/src/App.js"],"names":["React","legalMovesCheckSide","currentSide","squareSide","add","stop","getNumSquaresToEdge","numSquaresToEdge","Array","file","rank","numNorth","numSouth","numWest","numEast","squareIndex","Map","set","Math","min","Square","props","classes","floor","id","isHighlighted","imgMap","r_b","n_b","b_b","q_b","k_b","p_b","r_w","n_w","b_w","q_w","k_w","p_w","imgsrc","piece","get","onClick","getSideFromPiece","Set","has","getBoardFromFEN","FEN","map","i","push","pieces","charAt","ch","console","log","Number","calculateWinner","squares","Board","Component","constructor","state","boardSize","renderSquare","highlighted","renderRow","rowNumber","colNumbers","from","keys","colNumber","render","numbers","rows","number","Game","history","whiteShortCastle","whiteLongCastle","blackShortCastle","blackLongCastle","enPassantTarget","whiteTurn","stepNumber","selectedPiece","selectedID","getSlidingMoves","vertAndHor","diagonals","boundaries","friendlySide","legalMoves","dirs","pointer","forEach","dir","d","length","delete","getKnightMoves","getKingMoves","positions","poisitions","allowed","_","getPawnMoves","getLegalMoves","handleClick","slice","current","setState","concat","whiteIsNext","size","jumpTo","step","winner","moves","move","desc","status","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\n\nfunction legalMovesCheckSide(currentSide, squareSide){\n\tlet add;\n\tlet stop;\n\tif (squareSide === 'empty'){\n\t\tadd = true;\n\t\tstop = false;\n\t}else if(squareSide === currentSide){\n\t\tadd = false;\n\t\tstop = true;\n\t}else{\n\t\tadd = true;\n\t\tstop = true;\n\t}\n\treturn [add, stop]\n}\nfunction getNumSquaresToEdge(){\n\tvar numSquaresToEdge = new Array(64);\n\tfor (var file = 0; file < 8; file ++){\n\t\tfor (var rank = 0; rank < 8; rank ++){\n\t\t\tvar numNorth = rank;\n\t\t\tvar numSouth = 7-rank;\n\t\t\tvar numWest = file;\n\t\t\tvar numEast = 7-file;\n\t\t\tvar squareIndex = rank*8+file\n\t\t\tnumSquaresToEdge[squareIndex] = new Map();\n\t\t\tnumSquaresToEdge[squareIndex].set(-8, numNorth);\n\t\t\tnumSquaresToEdge[squareIndex].set(8, numSouth);\n\t\t\tnumSquaresToEdge[squareIndex].set(-1, numWest);\n\t\t\tnumSquaresToEdge[squareIndex].set(1, numEast);\n\t\t\tnumSquaresToEdge[squareIndex].set(-9, Math.min(numNorth, numWest));\n\t\t\tnumSquaresToEdge[squareIndex].set(-7, Math.min(numNorth, numEast));\n\t\t\tnumSquaresToEdge[squareIndex].set(9, Math.min(numSouth, numEast));\n\t\t\tnumSquaresToEdge[squareIndex].set(7, Math.min(numSouth, numWest));\n\t\t}\n\t}\n\treturn numSquaresToEdge\n}\nfunction Square(props){\n\tvar classes = \"square\";\n\t((Math.floor(props.id/8) + (props.id % 8)) % 2 !== 0) ? classes += \" black\" : classes += \" white\"; \n\t(props.isHighlighted) ? classes += \" highlighted\" : classes += \"\";\n\tlet imgMap = new Map();\n\timgMap.set('r', r_b);\n\timgMap.set('n', n_b);\n\timgMap.set('b', b_b);\n\timgMap.set('q', q_b);\n\timgMap.set('k', k_b);\n\timgMap.set('p', p_b);\n\timgMap.set('R', r_w);\n\timgMap.set('N', n_w);\n\timgMap.set('B', b_w);\n\timgMap.set('Q', q_w);\n\timgMap.set('K', k_w);\n\timgMap.set('P', p_w);\n\tlet imgsrc;\n\t(props.piece !== '') ? imgsrc = imgMap.get(props.piece) : imgsrc = '';\n\t//imgsrc = require(\"./logo.svg\");\n\treturn (\n\t\t<button className={classes} onClick={props.onClick}>\n\t\t\t<img className=\"piece\" src={imgsrc} alt={props.piece}></img>\n\t\t\t{props.id}\n\t\t</button>\n\t);\n}\nfunction getSideFromPiece(piece){\n\tif (new Set(['r', 'n', 'b', 'q', 'k', 'p']).has(piece)){\n\t\treturn 'black'\n\t}else if (new Set(['R', 'N', 'B', 'Q', 'K', 'P']).has(piece)){\n\t\treturn 'white'\n\t}else{\n\t\treturn 'empty'\n\t}\n}\nfunction getBoardFromFEN(FEN){\n        var map = [];\n        for (var i = 0; i<64; i++){\n                map.push('');\n        }\n        var id = 0;\n        const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n        var i = 0;\n        while (FEN.charAt(i) !== ' '){\n\t\tvar ch = FEN.charAt(i)\n                console.log(i, id, ch);\n                if (pieces.has(ch)){\n                        map[id] = ch;\n                        id += 1;\n                }else if(ch >= '0'.charAt(0) && ch <= '9'.charAt(0)){\n                        id += Number(ch);\n                }\n                i++;\n        }\n        return map;\n}\nfunction calculateWinner(squares){\n\treturn null;\n\t//can also return \"draw\"\n}\nclass Board extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tboardSize: 8,\n\t\t};\n\t}\n\trenderSquare(i) {\n\t\treturn (<Square \n\t\t\tisHighlighted={this.props.highlighted.has(i)}\n\t\t\tid={i}\n\t\t\tpiece={this.props.squares[i]}\n\t\t\tonClick={() => this.props.onClick(i)}\n\t\t/>);\n\t}\n\trenderRow(rowNumber){\n\t\tconst colNumbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst squares = colNumbers.map((colNumber) =>\n\t\t\tthis.renderSquare(rowNumber*this.state.boardSize + colNumber)\n\t\t);\n\n\n\t\treturn(<div className=\"board-row\">{squares}</div>);\n\n\t}\n\trender(){\n\t\tconst numbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst rows = numbers.map((number) =>\n\t\t\tthis.renderRow(number)\n\t\t);\n\t\treturn(\n\t\t\t<div>{rows}</div>\n\t\t)\t\n\t}\n\n}\n\nclass Game extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n\t\t\t\tsquares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n\t\t\t\twhiteShortCastle: true,\n\t\t\t\twhiteLongCastle: true,\n\t\t\t\tblackShortCastle: true,\n\t\t\t\tblackLongCastle: true,\n\t\t\t\tenPassantTarget: null,\n\t\t\t}],\n\t\t\twhiteTurn: true,\n\t\t\tstepNumber: 0,\n\t\t\tselectedPiece: null,\n\t\t\tselectedID: null,\n\t\t\tnumSquaresToEdge: getNumSquaresToEdge(),\n\t\t};\n\t}\n\tgetSlidingMoves(id){\n\t\tconst vertAndHor = [8, -8, 1, -1];\n\t\tconst diagonals = [7,9,-7,-9];\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tconst boundaries = new Set([0,1,2,3,4,5,6,7,8,15,23,31,39,47,55,63,62,61,60,59,58,57,56,48,40,32,24,16,8])\n\t\tconst friendlySide = getSideFromPiece(squares[id]);\n\t\tvar legalMoves = new Set();\n\t\tvar dirs = [];\n\t\tvar pointer = id\n\t\tlet add;\n\t\tlet stop;\n\t\tif (new Set(['b', 'B', 'q', 'Q']).has(squares[id])){\n\t\t\tdiagonals.forEach(dir => dirs.push(dir))\n\t\t}\n\t\tif (new Set(['r', 'R', 'q', 'Q']).has(squares[id])){\n\t\t\tvertAndHor.forEach(dir => dirs.push(dir))\n\t\t}\n\t\tconsole.log(dirs);\n\t\tfor (var d = 0; d < dirs.length; d++){\n\t\t\tvar dir = dirs[d];\n\t\t\tpointer = id+dir;\n\t\t\tfor (var i = 0; i < this.state.numSquaresToEdge[id].get(dir); i++){\n\t\t\t\t[add, stop] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]));\t\n\t\t\t\tif (add) legalMoves.add(pointer);\n\t\t\t\tif (stop) break;\n\t\t\t\tpointer += dir;\n\t\t\t}\n\t\t}\n\t\tlegalMoves.delete(id);\n\t\treturn legalMoves\n\t}\n\t\n\tgetKnightMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetKingMoves(id){\n\t\tconst positions = [8, -8, 1, -1, 7, 9, -7, -9];\n\t\tvar legalMoves = new Set();\n\t\tfor (var d = 0; d < positions.length; d++){\n\t\t\tpointer = poisitions[d];\n\t\t\t[allowed, _] = legalMovesCheckSide(friendlySide, getSideFromPiece(squares[pointer]))\n\t\t\tif (allowed) legalMoves.add(pointer)\n\t\t}\n\t\treturn legalMoves\n\t}\n\tgetPawnMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetLegalMoves(id, piece){\n\t\tconsole.log(\"ID and piece from get legal moves\", id, piece);\n\t\tif (id !== null && piece !== ''){\n\t\t\tif (new Set(['r', 'R', 'b', 'B', 'q', 'Q']).has(piece)){\n\t\t\t\treturn this.getSlidingMoves(id)\n\t\t\t}else if (new Set(['n', 'N']).has(piece)){\n\t\t\t\treturn this.getKnightMoves(id)\n\t\t\t}else if (new Set(['k', 'K']).has(piece)){\n\t\t\t\treturn this.getKingMoves(id)\n\t\t\t}else if (new Set(['p', 'P']).has(piece)){\n\t\t\t\treturn this.getPawnMoves(id)\n\t\t\t}else{\n\t\t\t\tconsole.log(\"Something has gone wrong with get legal moves function\")\n\t\t\t\treturn new Set();\n\t\t\t}\n\n\t\t}else{\n\t\t\treturn new Set()\n\t\t}\n\t}\n\thandleClick(i){\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber+1);\n\t\tconst current = history[history.length-1];\n\t\tvar squares = current.squares.slice();\n\t\tconst selectedPiece = this.state.selectedPiece;\n\t\tconst selectedID = this.state.selectedID;\n\t\tconsole.log(\"selected piece and id for handle click\", selectedPiece, selectedID);\n\t\tif (calculateWinner(squares)) {\n\t\t\treturn;\n\t\t}else if(selectedPiece && selectedID != null){\n\t\t\t//if i is a legal move\n\t\t\tif (this.getLegalMoves(selectedID, selectedPiece).has(i)){\n\t\t\t\tsquares[selectedID] = \"\"\n\t\t\t\tsquares[i] = selectedPiece\n\t\t\t\tthis.setState({\n\t\t\t\t\thistory: history.concat([{\n\t\t\t\t\t\tsquares: squares,\n\t\t\t\t\t}]),\n\t\t\t\t\twhiteIsNext: !this.state.whiteTurn,\n\t\t\t\t\tstepNumber: history.length,\n\t\t\t\t\tselectedPiece: null,\n\t\t\t\t\tselectedID: null,\n\t\t\t\t});\n\t\t\t\n\t\t\t}\n\n\t\t}\n\t\telse if (this.getLegalMoves(i, squares[i]).size !== 0){\n\t\t\tthis.setState({\n\t\t\t\tselectedPiece: squares[i],\n\t\t\t\tselectedID: i,\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\tjumpTo(step){\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\twhiteTurn: (step % 2) === 0,\n\t\t});\n\t}\n\trender(){\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ?\n\t\t\t\t'Go to move #' + move:\n\t\t\t\t'Go to game start';\n\t\t\tif (move === this.state.stepNumber){\n\t\t\t\treturn (\n\t\t\t\t\t<li key = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}else{\n\t\t\t\treturn(\n\t\t\t\t\t<li key = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t\t\t\t\t</li>\n\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tlet status;\n\t\tif (winner === \"draw\"){\n\t\t\tstatus = \"Draw\";\n\t\t}\n\t\telse if (winner){\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t}\n\t\telse {\n\t\t\tstatus = (this.state.whiteTurn ? 'White': 'Black') + \"'s turn\";\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className = \"game-board\">\n\t\t\t\t<Board \n\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\thighlighted={this.getLegalMoves(this.state.selectedID, this.state.selectedPiece)}\n\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{moves}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction App() {\n  return (\n  \t<Game />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}