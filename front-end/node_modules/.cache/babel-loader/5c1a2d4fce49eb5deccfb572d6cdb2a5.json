{"ast":null,"code":"var _jsxFileName = \"/home/patrick/projects/chessbot/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  var classes = \"square\";\n  (Math.floor(props.id / 8) + props.id % 8) % 2 != 0 ? classes += \" black\" : classes += \" white\";\n  props.isHighlighted ? classes += \" highlighted\" : classes += \"\";\n  let imgMap = new Map();\n  imgMap.set('r', r_b);\n  imgMap.set('n', n_b);\n  imgMap.set('b', b_b);\n  imgMap.set('q', q_b);\n  imgMap.set('k', k_b);\n  imgMap.set('p', p_b);\n  imgMap.set('R', r_w);\n  imgMap.set('N', n_w);\n  imgMap.set('B', b_w);\n  imgMap.set('Q', q_w);\n  imgMap.set('K', k_w);\n  imgMap.set('P', p_w);\n  let imgsrc;\n  props.piece != '' ? imgsrc = imgMap.get(props.piece) : imgsrc = ''; //imgsrc = require(\"./logo.svg\");\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"piece\",\n      src: imgsrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), props.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Square;\n\nfunction getSideFromPiece(piece) {\n  if (new Set(['r', 'n', 'b', 'q', 'k', 'p']).has(piece)) {\n    return 'black';\n  } else if (new Set(['R', 'N', 'B', 'Q', 'K', 'P']).has(piece)) {\n    return 'white';\n  } else {\n    return 'empty';\n  }\n}\n\nfunction getBoardFromFEN(FEN) {\n  var map = [];\n\n  for (var i = 0; i < 64; i++) {\n    map.push('');\n  }\n\n  var id = 0;\n  const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n  var i = 0;\n\n  while (FEN.charAt(i) != ' ') {\n    var ch = FEN.charAt(i);\n    console.log(i, id, ch);\n\n    if (pieces.has(ch)) {\n      map[id] = ch;\n      id += 1;\n    } else if (ch >= '0'.charAt(0) && ch <= '9'.charAt(0)) {\n      id += Number(ch);\n    }\n\n    i++;\n  }\n\n  return map;\n}\n\nfunction calculateWinner(squares) {\n  return null; //can also return \"draw\"\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardSize: 8\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      isHighlighted: this.props.highlighted.has(i),\n      id: i,\n      piece: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this);\n  }\n\n  renderRow(rowNumber) {\n    const colNumbers = Array.from(Array(this.state.boardSize).keys());\n    const squares = colNumbers.map(colNumber => this.renderSquare(rowNumber * this.state.boardSize + colNumber));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this);\n  }\n\n  render() {\n    const numbers = Array.from(Array(this.state.boardSize).keys());\n    const rows = numbers.map(number => this.renderRow(number));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        FEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n        squares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n        whiteShortCastle: true,\n        whiteLongCastle: true,\n        blackShortCastle: true,\n        blackLongCastle: true,\n        enPassantTarget: null\n      }],\n      whiteTurn: true,\n      stepNumber: 0,\n      selectedPiece: null,\n      selectedID: null\n    };\n  }\n\n  getRookMoves(id) {\n    const squares = this.state.history[this.state.stepNumber].squares;\n    let currentSide;\n    squares[id] == 'R' ? currentSide = 'white' : currentSide = 'black';\n    console.log(squares);\n    var legalMoves = new Set();\n    var pointer = id; //check verticles \n\n    while (pointer < 64) {\n      console.log(\"down verticle loop\", pointer, legalMoves);\n\n      if (currentSide == getSideFromPiece(squares[pointer])) {\n        break;\n      } else if ('empty' == getSideFromPiece(squares[pointer])) {\n        legalMoves.add(pointer);\n      } else {\n        legalMoves.add(pointer);\n        break;\n      }\n\n      pointer += 8;\n    }\n\n    return legalMoves;\n  }\n\n  getBishopMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getQueenMoves(id) {\n    return new Set([...this.getRookMoves(id)], [...this.getBishopMoves(id)]);\n  }\n\n  getKnightMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getKingMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getPawnMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getLegalMoves(id, piece) {\n    console.log(\"ID and piece from get legal moves\", id, piece);\n\n    if (id != null && piece != '') {\n      if (new Set(['r', 'R']).has(piece)) {\n        return this.getRookMoves(id);\n      } else if (new Set(['b', 'B']).has(piece)) {\n        return this.getBishopMoves(id);\n      } else if (new Set(['n', 'N']).has(piece)) {\n        return this.getKnightMoves(id);\n      } else if (new Set(['q', 'Q']).has(piece)) {\n        return this.getQueenMoves(id);\n      } else if (new Set(['k', 'K']).has(piece)) {\n        return this.getKingMoves(id);\n      } else if (new Set(['p', 'P']).has(piece)) {\n        return this.getPawnMoves(id);\n      } else {\n        console.log(\"Something has gone wrong with get legal moves function\");\n        return new Set();\n      }\n    } else {\n      return new Set();\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    var squares = current.squares.slice();\n    const selectedPiece = this.state.selectedPiece;\n    const selectedID = this.state.selectedID;\n    console.log(\"selected piece and id for handle click\", selectedPiece, selectedID);\n\n    if (calculateWinner(squares)) {\n      return;\n    } else if (selectedPiece && selectedID != null) {\n      //if i is a legal move\n      if (this.getLegalMoves(selectedID, selectedPiece).has(i)) {\n        squares[selectedID] = \"\";\n        squares[i] = selectedPiece;\n        this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          whiteIsNext: !this.state.whiteTurn,\n          stepNumber: history.length,\n          selectedPiece: null,\n          selectedID: null\n        });\n      }\n    } else {\n      this.setState({\n        selectedPiece: squares[i],\n        selectedID: i\n      });\n    }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      whiteTurn: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n\n      if (move == this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: move,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 7\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 6\n        }, this);\n      }\n    });\n    let status;\n\n    if (winner == \"draw\") {\n      status = \"Draw\";\n    } else if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = (this.state.whiteTurn ? 'White' : 'Black') + \"'s turn\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          highlighted: this.getLegalMoves(this.state.selectedID, this.state.selectedPiece),\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 4\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/patrick/projects/chessbot/src/App.js"],"names":["React","Square","props","classes","Math","floor","id","isHighlighted","imgMap","Map","set","r_b","n_b","b_b","q_b","k_b","p_b","r_w","n_w","b_w","q_w","k_w","p_w","imgsrc","piece","get","onClick","getSideFromPiece","Set","has","getBoardFromFEN","FEN","map","i","push","pieces","charAt","ch","console","log","Number","calculateWinner","squares","Board","Component","constructor","state","boardSize","renderSquare","highlighted","renderRow","rowNumber","colNumbers","Array","from","keys","colNumber","render","numbers","rows","number","Game","history","whiteShortCastle","whiteLongCastle","blackShortCastle","blackLongCastle","enPassantTarget","whiteTurn","stepNumber","selectedPiece","selectedID","getRookMoves","currentSide","legalMoves","pointer","add","getBishopMoves","getQueenMoves","getKnightMoves","getKingMoves","getPawnMoves","getLegalMoves","handleClick","slice","current","length","setState","concat","whiteIsNext","jumpTo","step","winner","moves","move","desc","status","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\n\nfunction Square(props){\n\tvar classes = \"square\";\n\t((Math.floor(props.id/8) + (props.id % 8)) % 2 != 0) ? classes += \" black\" : classes += \" white\"; \n\t(props.isHighlighted) ? classes += \" highlighted\" : classes += \"\";\n\tlet imgMap = new Map();\n\timgMap.set('r', r_b);\n\timgMap.set('n', n_b);\n\timgMap.set('b', b_b);\n\timgMap.set('q', q_b);\n\timgMap.set('k', k_b);\n\timgMap.set('p', p_b);\n\timgMap.set('R', r_w);\n\timgMap.set('N', n_w);\n\timgMap.set('B', b_w);\n\timgMap.set('Q', q_w);\n\timgMap.set('K', k_w);\n\timgMap.set('P', p_w);\n\tlet imgsrc;\n\t(props.piece != '') ? imgsrc = imgMap.get(props.piece) : imgsrc = '';\n\t//imgsrc = require(\"./logo.svg\");\n\treturn (\n\t\t<button className={classes} onClick={props.onClick}>\n\t\t\t<img className=\"piece\" src={imgsrc}></img>\n\t\t\t{props.id}\n\t\t</button>\n\t);\n}\nfunction getSideFromPiece(piece){\n\tif (new Set(['r', 'n', 'b', 'q', 'k', 'p']).has(piece)){\n\t\treturn 'black'\n\t}else if (new Set(['R', 'N', 'B', 'Q', 'K', 'P']).has(piece)){\n\t\treturn 'white'\n\t}else{\n\t\treturn 'empty'\n\t}\n}\nfunction getBoardFromFEN(FEN){\n        var map = [];\n        for (var i = 0; i<64; i++){\n                map.push('');\n        }\n        var id = 0;\n        const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n        var i = 0;\n        while (FEN.charAt(i) != ' '){\n\t\tvar ch = FEN.charAt(i)\n                console.log(i, id, ch);\n                if (pieces.has(ch)){\n                        map[id] = ch;\n                        id += 1;\n                }else if(ch >= '0'.charAt(0) && ch <= '9'.charAt(0)){\n                        id += Number(ch);\n                }\n                i++;\n        }\n        return map;\n}\nfunction calculateWinner(squares){\n\treturn null;\n\t//can also return \"draw\"\n}\nclass Board extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tboardSize: 8,\n\t\t};\n\t}\n\trenderSquare(i) {\n\t\treturn (<Square \n\t\t\tisHighlighted={this.props.highlighted.has(i)}\n\t\t\tid={i}\n\t\t\tpiece={this.props.squares[i]}\n\t\t\tonClick={() => this.props.onClick(i)}\n\t\t/>);\n\t}\n\trenderRow(rowNumber){\n\t\tconst colNumbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst squares = colNumbers.map((colNumber) =>\n\t\t\tthis.renderSquare(rowNumber*this.state.boardSize + colNumber)\n\t\t);\n\n\n\t\treturn(<div className=\"board-row\">{squares}</div>);\n\n\t}\n\trender(){\n\t\tconst numbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst rows = numbers.map((number) =>\n\t\t\tthis.renderRow(number)\n\t\t);\n\t\treturn(\n\t\t\t<div>{rows}</div>\n\t\t)\t\n\t}\n\n}\n\nclass Game extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n\t\t\t\tsquares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n\t\t\t\twhiteShortCastle: true,\n\t\t\t\twhiteLongCastle: true,\n\t\t\t\tblackShortCastle: true,\n\t\t\t\tblackLongCastle: true,\n\t\t\t\tenPassantTarget: null,\n\t\t\t}],\n\t\t\twhiteTurn: true,\n\t\t\tstepNumber: 0,\n\t\t\tselectedPiece: null,\n\t\t\tselectedID: null,\n\t\t};\n\t}\n\tgetRookMoves(id){\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tlet currentSide;\n\t\t(squares[id] == 'R') ? currentSide = 'white' : currentSide = 'black';\n\t\t\n\t\tconsole.log(squares)\n\t\tvar legalMoves = new Set();\n\t\tvar pointer = id;\n\t\t//check verticles \n\t\twhile (pointer < 64){\n\t\t\tconsole.log(\"down verticle loop\", pointer, legalMoves);\n\t\t\tif(currentSide == getSideFromPiece(squares[pointer])) {\n\t\t\t\tbreak;\n\t\t\t}else if ('empty' == getSideFromPiece(squares[pointer])){\n\t\t\t\tlegalMoves.add(pointer);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlegalMoves.add(pointer);\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tpointer += 8;\n\t\t}\n\t\t\n\t\treturn legalMoves\n\t}\n\tgetBishopMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetQueenMoves(id){\n\t\treturn new Set([...this.getRookMoves(id)], [...this.getBishopMoves(id)]);\n\t}\n\tgetKnightMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetKingMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetPawnMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetLegalMoves(id, piece){\n\t\tconsole.log(\"ID and piece from get legal moves\", id, piece);\n\t\tif (id != null && piece != ''){\n\t\t\tif (new Set(['r', 'R']).has(piece)){\n\t\t\t\treturn this.getRookMoves(id)\n\t\t\t}else if (new Set(['b', 'B']).has(piece)){\n\t\t\t\treturn this.getBishopMoves(id)\n\t\t\t}else if (new Set(['n', 'N']).has(piece)){\n\t\t\t\treturn this.getKnightMoves(id)\n\t\t\t}else if (new Set(['q', 'Q']).has(piece)){\n\t\t\t\treturn this.getQueenMoves(id)\n\t\t\t}else if (new Set(['k', 'K']).has(piece)){\n\t\t\t\treturn this.getKingMoves(id)\n\t\t\t}else if (new Set(['p', 'P']).has(piece)){\n\t\t\t\treturn this.getPawnMoves(id)\n\t\t\t}else{\n\t\t\t\tconsole.log(\"Something has gone wrong with get legal moves function\")\n\t\t\t\treturn new Set();\n\t\t\t}\n\n\t\t}else{\n\t\t\treturn new Set()\n\t\t}\n\t}\n\thandleClick(i){\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber+1);\n\t\tconst current = history[history.length-1];\n\t\tvar squares = current.squares.slice();\n\t\tconst selectedPiece = this.state.selectedPiece;\n\t\tconst selectedID = this.state.selectedID;\n\t\tconsole.log(\"selected piece and id for handle click\", selectedPiece, selectedID);\n\t\tif (calculateWinner(squares)) {\n\t\t\treturn;\n\t\t}else if(selectedPiece && selectedID != null){\n\t\t\t//if i is a legal move\n\t\t\tif (this.getLegalMoves(selectedID, selectedPiece).has(i)){\n\t\t\t\tsquares[selectedID] = \"\"\n\t\t\t\tsquares[i] = selectedPiece\n\t\t\t\tthis.setState({\n\t\t\t\t\thistory: history.concat([{\n\t\t\t\t\t\tsquares: squares,\n\t\t\t\t\t}]),\n\t\t\t\t\twhiteIsNext: !this.state.whiteTurn,\n\t\t\t\t\tstepNumber: history.length,\n\t\t\t\t\tselectedPiece: null,\n\t\t\t\t\tselectedID: null,\n\t\t\t\t});\n\t\t\t\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tthis.setState({\n\t\t\t\tselectedPiece: squares[i],\n\t\t\t\tselectedID: i,\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\tjumpTo(step){\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\twhiteTurn: (step % 2) === 0,\n\t\t});\n\t}\n\trender(){\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ?\n\t\t\t\t'Go to move #' + move:\n\t\t\t\t'Go to game start';\n\t\t\tif (move == this.state.stepNumber){\n\t\t\t\treturn (\n\t\t\t\t\t<li ref = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}else{\n\t\t\t\treturn(\n\t\t\t\t\t<li key = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t\t\t\t\t</li>\n\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tlet status;\n\t\tif (winner == \"draw\"){\n\t\t\tstatus = \"Draw\";\n\t\t}\n\t\telse if (winner){\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t}\n\t\telse {\n\t\t\tstatus = (this.state.whiteTurn ? 'White': 'Black') + \"'s turn\";\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className = \"game-board\">\n\t\t\t\t<Board \n\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\thighlighted={this.getLegalMoves(this.state.selectedID, this.state.selectedPiece)}\n\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{moves}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction App() {\n  return (\n  \t<Game />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}