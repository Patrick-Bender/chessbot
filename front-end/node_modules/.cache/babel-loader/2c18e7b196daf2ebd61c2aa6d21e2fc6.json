{"ast":null,"code":"var _jsxFileName = \"/home/patrick/projects/chessbot/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  var classes = \"square\";\n  (Math.floor(props.id / 8) + props.id % 8) % 2 != 0 ? classes += \" black\" : classes += \" white\";\n  props.isHighlighted ? classes += \" highlighted\" : classes += \"\";\n  let imgMap = new Map();\n  imgMap.set('r', r_b);\n  imgMap.set('n', n_b);\n  imgMap.set('b', b_b);\n  imgMap.set('q', q_b);\n  imgMap.set('k', k_b);\n  imgMap.set('p', p_b);\n  imgMap.set('R', r_w);\n  imgMap.set('N', n_w);\n  imgMap.set('B', b_w);\n  imgMap.set('Q', q_w);\n  imgMap.set('K', k_w);\n  imgMap.set('P', p_w);\n  let imgsrc;\n  props.piece != '' ? imgsrc = imgMap.get(props.piece) : imgsrc = ''; //imgsrc = require(\"./logo.svg\");\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"piece\",\n      src: imgsrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), props.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Square;\n\nfunction getBoardFromFEN(FEN) {\n  var map = [];\n\n  for (var i = 0; i < 64; i++) {\n    map.push('');\n  }\n\n  var id = 0;\n  const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n  var i = 0;\n\n  while (FEN.charAt(i) != ' ') {\n    var ch = FEN.charAt(i);\n    console.log(i, id, ch);\n\n    if (pieces.has(ch)) {\n      map[id] = ch;\n      id += 1;\n    } else if (ch >= '0'.charAt(0) && ch <= '9'.charAt(0)) {\n      id += Number(ch);\n    }\n\n    i++;\n  }\n\n  return map;\n}\n\nfunction calculateWinner(squares) {\n  return null; //can also return \"draw\"\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardSize: 8\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      isHighlighted: this.props.highlighted.has(i),\n      id: i,\n      piece: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this);\n  }\n\n  renderRow(rowNumber) {\n    const colNumbers = Array.from(Array(this.state.boardSize).keys());\n    const squares = colNumbers.map(colNumber => this.renderSquare(rowNumber * this.state.boardSize + colNumber));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }, this);\n  }\n\n  render() {\n    const numbers = Array.from(Array(this.state.boardSize).keys());\n    const rows = numbers.map(number => this.renderRow(number));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        FEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n        squares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n        whiteShortCastle: true,\n        whiteLongCastle: true,\n        blackShortCastle: true,\n        blackLongCastle: true,\n        enPassantTarget: null\n      }],\n      whiteTurn: true,\n      stepNumber: 0,\n      selectedPiece: null,\n      selectedID: null\n    };\n  }\n\n  getRookMoves(id) {\n    const squares = this.state.history[this.state.stepNumber].squares;\n    console.log(squares);\n    var pointer = id; //check \n    //while (pointer < 64 || \n\n    return new Set([...Array(64).keys()]);\n  }\n\n  getBishopMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getQueenMoves(id) {\n    return new Set([...this.getRookMoves(id)], [...this.getBishopMoves(id)]);\n  }\n\n  getKnightMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getKingMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getPawnMoves(id) {\n    return new Set([...Array(64).keys()]);\n  }\n\n  getLegalMoves(id, piece) {\n    console.log(id, piece);\n\n    if (piece && id) {\n      if (new Set(['r', 'R']).has(piece)) {\n        return this.getRookMoves(id);\n      } else if (new Set(['b', 'B']).has(piece)) {\n        return this.getBishopMoves(id);\n      } else if (new Set(['n', 'N']).has(piece)) {\n        return this.getKnightMoves(id);\n      } else if (new Set(['q', 'Q']).has(piece)) {\n        return this.getQueenMoves(id);\n      } else if (new Set(['k', 'K']).has(piece)) {\n        return this.getKingMoves(id);\n      } else if (new Set(['p', 'P']).has(piece)) {\n        return this.getPawnMoves(id);\n      } else {\n        alert(\"Something has gone wrong with get legal moves function\");\n      }\n    } else {\n      return new Set();\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    var squares = current.squares.slice();\n    const selectedPiece = this.state.selectedPiece;\n    const selectedID = this.state.selectedID;\n\n    if (calculateWinner(squares)) {\n      return;\n    } else if (selectedPiece && selectedID) {\n      //if i is a legal move\n      if (this.getLegalMoves(selectedID, selectedPiece).has(i)) {\n        squares[selectedID] = \"\";\n        squares[i] = selectedPiece;\n        this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          whiteIsNext: !this.state.whiteTurn,\n          stepNumber: history.length,\n          selectedPiece: null,\n          selectedID: null\n        });\n      }\n    } else {\n      this.setState({\n        selectedPiece: squares[i],\n        selectedID: i\n      });\n    }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      whiteTurn: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n\n      if (move == this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: move,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 7\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 6\n        }, this);\n      }\n    });\n    let status;\n\n    if (winner == \"draw\") {\n      status = \"Draw\";\n    } else if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = (this.state.whiteTurn ? 'White' : 'Black') + \"'s turn\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          highlighted: this.getLegalMoves(this.state.selectedID, this.state.selectedPiece),\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 4\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/patrick/projects/chessbot/src/App.js"],"names":["React","Square","props","classes","Math","floor","id","isHighlighted","imgMap","Map","set","r_b","n_b","b_b","q_b","k_b","p_b","r_w","n_w","b_w","q_w","k_w","p_w","imgsrc","piece","get","onClick","getBoardFromFEN","FEN","map","i","push","pieces","Set","charAt","ch","console","log","has","Number","calculateWinner","squares","Board","Component","constructor","state","boardSize","renderSquare","highlighted","renderRow","rowNumber","colNumbers","Array","from","keys","colNumber","render","numbers","rows","number","Game","history","whiteShortCastle","whiteLongCastle","blackShortCastle","blackLongCastle","enPassantTarget","whiteTurn","stepNumber","selectedPiece","selectedID","getRookMoves","pointer","getBishopMoves","getQueenMoves","getKnightMoves","getKingMoves","getPawnMoves","getLegalMoves","alert","handleClick","slice","current","length","setState","concat","whiteIsNext","jumpTo","step","winner","moves","move","desc","status","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport r_b from \"./img/r.svg\";\nimport n_b from \"./img/n.svg\";\nimport b_b from \"./img/b.svg\";\nimport q_b from \"./img/q.svg\";\nimport k_b from \"./img/k.svg\";\nimport p_b from \"./img/p.svg\";\nimport r_w from \"./img/R.svg\";\nimport n_w from \"./img/N.svg\";\nimport b_w from \"./img/B.svg\";\nimport q_w from \"./img/Q.svg\";\nimport k_w from \"./img/K.svg\";\nimport p_w from \"./img/P.svg\";\n\nfunction Square(props){\n\tvar classes = \"square\";\n\t((Math.floor(props.id/8) + (props.id % 8)) % 2 != 0) ? classes += \" black\" : classes += \" white\"; \n\t(props.isHighlighted) ? classes += \" highlighted\" : classes += \"\";\n\tlet imgMap = new Map();\n\timgMap.set('r', r_b);\n\timgMap.set('n', n_b);\n\timgMap.set('b', b_b);\n\timgMap.set('q', q_b);\n\timgMap.set('k', k_b);\n\timgMap.set('p', p_b);\n\timgMap.set('R', r_w);\n\timgMap.set('N', n_w);\n\timgMap.set('B', b_w);\n\timgMap.set('Q', q_w);\n\timgMap.set('K', k_w);\n\timgMap.set('P', p_w);\n\tlet imgsrc;\n\t(props.piece != '') ? imgsrc = imgMap.get(props.piece) : imgsrc = '';\n\t//imgsrc = require(\"./logo.svg\");\n\treturn (\n\t\t<button className={classes} onClick={props.onClick}>\n\t\t\t<img className=\"piece\" src={imgsrc}></img>\n\t\t\t{props.id}\n\t\t</button>\n\t);\n}\nfunction getBoardFromFEN(FEN){\n        var map = [];\n        for (var i = 0; i<64; i++){\n                map.push('');\n        }\n        var id = 0;\n        const pieces = new Set(['r', 'n', 'b', 'q', 'k', 'p', 'R', 'N', 'B', 'Q', 'K', 'P']);\n        var i = 0;\n        while (FEN.charAt(i) != ' '){\n\t\tvar ch = FEN.charAt(i)\n                console.log(i, id, ch);\n                if (pieces.has(ch)){\n                        map[id] = ch;\n                        id += 1;\n                }else if(ch >= '0'.charAt(0) && ch <= '9'.charAt(0)){\n                        id += Number(ch);\n                }\n                i++;\n        }\n        return map;\n}\nfunction calculateWinner(squares){\n\treturn null;\n\t//can also return \"draw\"\n}\nclass Board extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tboardSize: 8,\n\t\t};\n\t}\n\trenderSquare(i) {\n\t\treturn (<Square \n\t\t\tisHighlighted={this.props.highlighted.has(i)}\n\t\t\tid={i}\n\t\t\tpiece={this.props.squares[i]}\n\t\t\tonClick={() => this.props.onClick(i)}\n\t\t/>);\n\t}\n\trenderRow(rowNumber){\n\t\tconst colNumbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst squares = colNumbers.map((colNumber) =>\n\t\t\tthis.renderSquare(rowNumber*this.state.boardSize + colNumber)\n\t\t);\n\n\n\t\treturn(<div className=\"board-row\">{squares}</div>);\n\n\t}\n\trender(){\n\t\tconst numbers = Array.from(Array(this.state.boardSize).keys());\n\t\tconst rows = numbers.map((number) =>\n\t\t\tthis.renderRow(number)\n\t\t);\n\t\treturn(\n\t\t\t<div>{rows}</div>\n\t\t)\t\n\t}\n\n}\n\nclass Game extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n\t\t\t\tsquares: getBoardFromFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"),\n\t\t\t\twhiteShortCastle: true,\n\t\t\t\twhiteLongCastle: true,\n\t\t\t\tblackShortCastle: true,\n\t\t\t\tblackLongCastle: true,\n\t\t\t\tenPassantTarget: null,\n\t\t\t}],\n\t\t\twhiteTurn: true,\n\t\t\tstepNumber: 0,\n\t\t\tselectedPiece: null,\n\t\t\tselectedID: null,\n\t\t};\n\t}\n\tgetRookMoves(id){\n\t\tconst squares = this.state.history[this.state.stepNumber].squares;\n\t\tconsole.log(squares)\n\t\tvar pointer = id;\n\t\t//check \n\t\t//while (pointer < 64 || \n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetBishopMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetQueenMoves(id){\n\t\treturn new Set([...this.getRookMoves(id)], [...this.getBishopMoves(id)]);\n\t}\n\tgetKnightMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetKingMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetPawnMoves(id){\n\t\treturn new Set([...Array(64).keys()])\n\t}\n\tgetLegalMoves(id, piece){\n\t\tconsole.log(id, piece);\n\t\tif (piece && id){\n\t\t\tif (new Set(['r', 'R']).has(piece)){\n\t\t\t\treturn this.getRookMoves(id)\n\t\t\t}else if (new Set(['b', 'B']).has(piece)){\n\t\t\t\treturn this.getBishopMoves(id)\n\t\t\t}else if (new Set(['n', 'N']).has(piece)){\n\t\t\t\treturn this.getKnightMoves(id)\n\t\t\t}else if (new Set(['q', 'Q']).has(piece)){\n\t\t\t\treturn this.getQueenMoves(id)\n\t\t\t}else if (new Set(['k', 'K']).has(piece)){\n\t\t\t\treturn this.getKingMoves(id)\n\t\t\t}else if (new Set(['p', 'P']).has(piece)){\n\t\t\t\treturn this.getPawnMoves(id)\n\t\t\t}else{\n\t\t\t\talert(\"Something has gone wrong with get legal moves function\")\n\t\t\t}\n\n\t\t}else{\n\t\t\treturn new Set()\n\t\t}\n\t}\n\thandleClick(i){\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber+1);\n\t\tconst current = history[history.length-1];\n\t\tvar squares = current.squares.slice();\n\t\tconst selectedPiece = this.state.selectedPiece;\n\t\tconst selectedID = this.state.selectedID;\n\t\tif (calculateWinner(squares)) {\n\t\t\treturn;\n\t\t}else if(selectedPiece && selectedID){\n\t\t\t//if i is a legal move\n\t\t\tif (this.getLegalMoves(selectedID, selectedPiece).has(i)){\n\t\t\t\tsquares[selectedID] = \"\"\n\t\t\t\tsquares[i] = selectedPiece\n\t\t\t\tthis.setState({\n\t\t\t\t\thistory: history.concat([{\n\t\t\t\t\t\tsquares: squares,\n\t\t\t\t\t}]),\n\t\t\t\t\twhiteIsNext: !this.state.whiteTurn,\n\t\t\t\t\tstepNumber: history.length,\n\t\t\t\t\tselectedPiece: null,\n\t\t\t\t\tselectedID: null,\n\t\t\t\t});\n\t\t\t\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tthis.setState({\n\t\t\t\tselectedPiece: squares[i],\n\t\t\t\tselectedID: i,\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\tjumpTo(step){\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\twhiteTurn: (step % 2) === 0,\n\t\t});\n\t}\n\trender(){\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ?\n\t\t\t\t'Go to move #' + move:\n\t\t\t\t'Go to game start';\n\t\t\tif (move == this.state.stepNumber){\n\t\t\t\treturn (\n\t\t\t\t\t<li ref = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}else{\n\t\t\t\treturn(\n\t\t\t\t\t<li key = {move}>\n\t\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t\t\t\t\t</li>\n\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\tlet status;\n\t\tif (winner == \"draw\"){\n\t\t\tstatus = \"Draw\";\n\t\t}\n\t\telse if (winner){\n\t\t\tstatus = 'Winner: ' + winner;\n\t\t}\n\t\telse {\n\t\t\tstatus = (this.state.whiteTurn ? 'White': 'Black') + \"'s turn\";\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className = \"game-board\">\n\t\t\t\t<Board \n\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\thighlighted={this.getLegalMoves(this.state.selectedID, this.state.selectedPiece)}\n\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{moves}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction App() {\n  return (\n  \t<Game />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}